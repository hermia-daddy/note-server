{"version":3,"sources":["components/Note.js","services/notes.js","components/Notification.js","components/Footer.js","App.js","index.js"],"names":["Note","note","toggleImportance","label","important","className","content","onClick","request","axios","get","nonExisting","id","date","then","response","data","concat","newObject","post","put","Notification","message","Footer","style","color","fontStyle","fontSize","App","useState","notes","setNotes","newNote","setNewNote","showAll","setShowAll","errorMessage","setErrorMessage","useEffect","noteService","initialNotes","noteToShow","filter","map","key","find","n","changedNote","returnedNote","catch","error","setTimeout","toggleImportanceOf","onSubmit","event","preventDefault","console","log","target","noteObject","Date","toISOString","Math","random","length","value","onChange","type","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6e97f437.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Note = ({ note, toggleImportance }) => {\r\n    const label = note.important ? 'make not important' : 'make important'\r\n    return (\r\n        <li className='note'>\r\n            {note.content}\r\n            <button onClick={toggleImportance}>{label}</button>\r\n        </li>\r\n    )\r\n}\r\n\r\nexport default Note","import axios from 'axios'\r\n\r\nconst baseUrl = `/api/notes`\r\n\r\nconst getAll = () => {\r\n    const request = axios.get(baseUrl)\r\n    const nonExisting = {\r\n        id: 10000,\r\n        content: 'This note is not saved to server',\r\n        date: '2019-05-30T17:30:31.098Z',\r\n        important: true,\r\n      }\r\n    return request.then(response => response.data.concat(nonExisting))\r\n}\r\n\r\nconst create = newObject => {\r\n    const request = axios.post(baseUrl, newObject)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n    const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nexport default { getAll, create, update }","import React from 'react'\r\n\r\nconst Notification = ({message})=>{\r\n    if(message === null){\r\n        return null\r\n    }\r\n\r\n    return (\r\n        <div className=\"error\">\r\n            {message}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Notification","import React from 'react'\r\n\r\nconst Footer = () => {\r\n    const footerStyle = {\r\n        color:'green',\r\n        fontStyle:'italic',\r\n        fontSize:16\r\n    }\r\n\r\n    return (\r\n        <div style={footerStyle}>\r\n            <br />\r\n            <em>Note app,Department of Computer Science</em>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Footer","import React, { useState, useEffect } from 'react'\r\nimport Note from './components/Note'\r\nimport noteService from './services/notes'\r\nimport Notification from './components/Notification'\r\nimport Footer from './components/Footer'\r\n\r\nconst App = () => {\r\n    const [notes, setNotes] = useState([])\r\n    const [newNote, setNewNote] = useState('')\r\n    const [showAll, setShowAll] = useState(true)\r\n    const [errorMessage, setErrorMessage] = useState(null)\r\n\r\n    const toggleImportanceOf = (id) => {\r\n        const note = notes.find(n => n.id === id)\r\n        const changedNote = { ...note, important: !note.important }\r\n\r\n        noteService.update(id, changedNote)\r\n            .then(returnedNote => {\r\n                setNotes(notes.map(note => note.id !== id ? note : returnedNote))\r\n            })\r\n            .catch(error => {\r\n                setErrorMessage(`the note '${note.content}' was already deleted from server`)\r\n                setTimeout(() => {\r\n                    setErrorMessage(null)\r\n                }, 5000)\r\n                setNotes(notes.filter(n => n.id !== id))\r\n            })\r\n\r\n    }\r\n    useEffect(() => {\r\n        noteService.getAll()\r\n            .then(initialNotes => {\r\n                setNotes(initialNotes)\r\n            })\r\n    }, [])\r\n\r\n    const addNote = (event) => {\r\n        event.preventDefault()\r\n        console.log('button clicked', event.target);\r\n        const noteObject = {\r\n            content: newNote,\r\n            date: new Date().toISOString(),\r\n            important: Math.random < 0.5,\r\n            id: notes.length + 1\r\n        }\r\n        noteService.create(noteObject)\r\n            .then(returnedNote => {\r\n                setNotes(notes.concat(returnedNote))\r\n                setNewNote('')\r\n            })\r\n    }\r\n\r\n    const handleNoteChange = (event) => {\r\n        console.log(event.target.value)\r\n        setNewNote(event.target.value)\r\n    }\r\n\r\n    const noteToShow = showAll ? notes : notes.filter(note => note.important === true)\r\n\r\n    return (\r\n        <div>\r\n            <h1>Notes</h1>\r\n            <Notification message={errorMessage} />\r\n            <div>\r\n                <button onClick={() => setShowAll(!showAll)}>\r\n                    show {showAll ? 'important' : 'all'}\r\n                </button>\r\n            </div>\r\n            <ul>\r\n                {noteToShow.map((note) =>\r\n                    <Note key={note.id} note={note} toggleImportance={() => toggleImportanceOf(note.id)} />\r\n                )}\r\n            </ul>\r\n            <form onSubmit={addNote}>\r\n                <input value={newNote} onChange={handleNoteChange} />\r\n                <button type='submit'>save</button>\r\n            </form>\r\n            <Footer/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport './index.css'\n\n// const notes = [\n//   {\n//     id: 1,\n//     content: 'HTML is easy',\n//     date: '2019-05-30T17:30:31.098Z',\n//     important: true\n//   },\n//   {\n//     id: 2,\n//     content: 'Browser can execute only Javascript',\n//     date: '2019-05-30T18:39:34.091Z',\n//     important: false\n//   },\n//   {\n//     id: 3,\n//     content: 'GET and POST are the most important methods of HTTP protocol',\n//     date: '2019-05-30T19:20:14.298Z',\n//     important: true\n//   }\n// ]\n\n\n\nReactDOM.render(<App /> ,document.getElementById('root'))\n"],"sourceRoot":""}